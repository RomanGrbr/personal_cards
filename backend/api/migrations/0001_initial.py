# Generated by Django 2.2.28 on 2024-04-22 06:20

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.SlugField(unique=True, verbose_name='Имя поля')),
                ('label', models.CharField(max_length=250, verbose_name='Название поля (label)')),
                ('help_text', models.CharField(max_length=250, verbose_name='Текст подсказка (help_text)')),
                ('is_uniq', models.BooleanField(default=False, verbose_name='Уникальность поля')),
            ],
            options={
                'verbose_name_plural': 'Атрибуты',
                'verbose_name': 'атрибут',
                'ordering': ('field_name',),
            },
        ),
        migrations.CreateModel(
            name='AttributeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(choices=[('number', 'Число'), ('text', 'Строка'), ('string', 'Текст'), ('date', 'Дата'), ('week', 'Неделя'), ('datetime-local', 'Дата и время'), ('time', 'Время'), ('email', 'Электронная почта'), ('file', 'Файл'), ('image', 'Фото'), ('video', 'Видео'), ('audio', 'Аудио'), ('checkbox', 'Чекбокс'), ('url', 'Ссылка'), ('tel', 'Телефон')], default='text', max_length=14, unique=True, verbose_name='Тип атрибута (text, integer, file...)')),
            ],
            options={
                'verbose_name_plural': 'Типы атрибутов',
                'verbose_name': 'тип атрибута',
                'ordering': ('type_name',),
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Уникальный идентификатор карточки uuid')),
                ('full_name', models.CharField(max_length=250, unique=True, verbose_name='ФИО персоны')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatar/', verbose_name='Аватарка')),
                ('auto_collect', models.BooleanField(default=False, verbose_name='Автоматический сбор')),
            ],
            options={
                'verbose_name_plural': 'Карточки персон',
                'verbose_name': 'карточка персоны',
                'ordering': ('full_name',),
            },
        ),
        migrations.CreateModel(
            name='MmdJSON',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MmdMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PerObj',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ScsPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SmiNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CardAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(verbose_name='Значение')),
                ('confirmed', models.BooleanField(default=False, verbose_name='Подтвержден')),
                ('vector_base', models.TextField(blank=True, verbose_name='Вектор')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attrs', to='api.Attribute', verbose_name='Атрибут')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attrs', to='api.Card', verbose_name='Карточка')),
            ],
            options={
                'verbose_name_plural': 'Значения атрибутов',
                'default_related_name': 'attrs',
                'verbose_name': 'значение атрибута',
                'ordering': ('attribute',),
            },
        ),
        migrations.AddField(
            model_name='attribute',
            name='attr_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attributes', to='api.AttributeType', verbose_name='Тип атрибута (поля)'),
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_id', models.CharField(db_index=True, max_length=100, verbose_name='socialId страницы из scs_page')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_networks', to='api.Card', verbose_name='Карточка')),
            ],
            options={
                'verbose_name_plural': 'Персональные страницы в социальных сетях',
                'verbose_name': 'персональная страница в социальной сети',
                'unique_together': {('card', 'social_id')},
            },
        ),
    ]
